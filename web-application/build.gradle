apply plugin: 'war'
apply plugin: 'liberty'
// apply plugin: 'org.ysb33r.nodejs.base'
// apply plugin: 'org.ysb33r.nodejs.npm'
apply plugin: 'org.ysb33r.nodejs.gulp'

description = 'Conference :: Web'
dependencies {
    libertyRuntime group: 'com.ibm.websphere.appserver.runtime', name: 'wlp-webProfile7', version:'17.0.0.3'
}

buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		maven {
		    url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies {
		classpath "net.wasdev.wlp.gradle.plugins:liberty-gradle-plugin:2.1-SNAPSHOT"
		classpath "gradle.plugin.org.ysb33r.gradle:nodejs-gradle-plugin:0.1"
	}
}

war {
    from "build/static-resources"
    webAppDirName = "src/main/local/webapp"
    archiveName = 'ROOT.' + extension
}

ext {
    // Liberty server properties
    wlpServerName = 'uiServer'
    testServerHttpPort = 8080
}

liberty {
	server {
		name = wlpServerName
        looseApplication = false
	}
}

gradle.taskGraph.whenReady { graph ->
	if (graph.hasTask(":web-application:libertyStart")) {
		libertyStart.doLast {
			println ("Application is running on http://localhost:${testServerHttpPort}/")
		}
	}
}

task cpEndpointsService(type: Copy) {
    from "src/main/local/static/app/shared/endpoints.service.ts"
    into "src/main/static/app/shared"
}

gulp {
    gulpFile 'src/main/static/gulpfile.js'
}

nodejs {
    executable version : '8.8.1'
}

task gulpBuild(type: org.ysb33r.gradle.nodejs.tasks.GulpTask) {
	target 'build'
}

task copyTarget(type: Copy) {
    from "target"
    into "build"
}

task deleteTarget(type: Delete) {
    delete("target")
}

build.dependsOn 'gulpBuild'
war.dependsOn 'copyTarget'
clean.finalizedBy 'deleteTarget'

apply plugin: 'liberty'
apply plugin: 'war'

dependencies {
    compile project(':demo-bootstrap')
    testCompile group: 'org.glassfish.jersey.core', name: 'jersey-common', version:'2.23.2'
    testCompile group: 'org.apache.cxf', name: 'cxf-rt-rs-client', version:'3.1.1'
    testCompile group: 'org.glassfish', name: 'javax.json', version:'1.0.4'
    compileOnly group: 'javax.ws.rs', name: 'javax.ws.rs-api', version:'2.0.1'
    compileOnly group: 'javax.inject', name: 'javax.inject', version:'1'
    compileOnly group: 'javax.interceptor', name: 'javax.interceptor-api', version: '1.2.1'
    compileOnly group: 'javax.enterprise', name: 'cdi-api', version: '2.0'
    providedCompile group: 'javax.annotation', name: 'javax.annotation-api', version:'1.2'
    libertyRuntime group: 'io.openliberty', name: 'openliberty-runtime', version:'17.0.0.3'
}

buildscript {
    repositories {
        mavenCentral()
        maven {
            // to be removed
            url 'https://oss.sonatype.org/content/repositories/snapshots/'
        }
    }
    dependencies {
        // snaptshot to be removed upon release
        classpath 'net.wasdev.wlp.gradle.plugins:liberty-gradle-plugin:2.0.1-SNAPSHOT'
    }
}

ext {
    // Liberty server properties
    wlpServerName = 'voteServer'
    testServerHttpPort = 7070
    testServerHttpsPort = 9443
    warContext = "vote"
}

war {
    archiveName = 'ROOT.' + extension
}

liberty {
    server {
        name = wlpServerName
        bootstrapProperties = ['default.http.port': testServerHttpPort, 'default.https.port': testServerHttpsPort]
        dropins = [war]
        looseApplication = false
    }
}

test {
    doLast {
        println 'inside the test block'
    }
    reports.html.destination = file("$buildDir/reports/unit")
    reports.junitXml.destination = file("$buildDir/test-results/unit")
    exclude '**/it/**'
}

task integrationTest(type: Test) {
    group 'Verification'
    description 'Runs the integration tests.'
    reports.html.destination = file("$buildDir/reports/it")
    reports.junitXml.destination = file("$buildDir/test-results/it")
    include '**/it/**'
    exclude '**/unit/**'

    systemProperties = ['liberty.test.port': testServerHttpPort, 'war.context': warContext]
}

task url {
    doLast { println 'Vote :: http://localhost:7070/' }
}
